{"/home/travis/build/npmtest/node-npmtest-pageres/test.js":"/* istanbul instrument in package npmtest_pageres */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pageres/lib.npmtest_pageres.js":"/* istanbul instrument in package npmtest_pageres */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_pageres = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_pageres = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-pageres/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-pageres && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_pageres */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_pageres\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_pageres.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_pageres.rollup.js'] =\n            local.assetsDict['/assets.npmtest_pageres.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_pageres.__dirname + '/lib.npmtest_pageres.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pageres/node_modules/pageres/dist/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _stream = require('stream');\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _arrayUniq = require('array-uniq');\n\nvar _arrayUniq2 = _interopRequireDefault(_arrayUniq);\n\nvar _arrayDiffer = require('array-differ');\n\nvar _arrayDiffer2 = _interopRequireDefault(_arrayDiffer);\n\nvar _easydate = require('easydate');\n\nvar _easydate2 = _interopRequireDefault(_easydate);\n\nvar _fsWriteStreamAtomic = require('fs-write-stream-atomic');\n\nvar _fsWriteStreamAtomic2 = _interopRequireDefault(_fsWriteStreamAtomic);\n\nvar _getRes = require('get-res');\n\nvar _getRes2 = _interopRequireDefault(_getRes);\n\nvar _logSymbols = require('log-symbols');\n\nvar _logSymbols2 = _interopRequireDefault(_logSymbols);\n\nvar _mem = require('mem');\n\nvar _mem2 = _interopRequireDefault(_mem);\n\nvar _mkdirp = require('mkdirp');\n\nvar _mkdirp2 = _interopRequireDefault(_mkdirp);\n\nvar _rimraf = require('rimraf');\n\nvar _rimraf2 = _interopRequireDefault(_rimraf);\n\nvar _screenshotStream = require('screenshot-stream');\n\nvar _screenshotStream2 = _interopRequireDefault(_screenshotStream);\n\nvar _viewportList = require('viewport-list');\n\nvar _viewportList2 = _interopRequireDefault(_viewportList);\n\nvar _protocolify = require('protocolify');\n\nvar _protocolify2 = _interopRequireDefault(_protocolify);\n\nvar _filenamify = require('filenamify');\n\nvar _filenamify2 = _interopRequireDefault(_filenamify);\n\nvar _filenamifyUrl = require('filenamify-url');\n\nvar _filenamifyUrl2 = _interopRequireDefault(_filenamifyUrl);\n\nvar _lodash = require('lodash.template');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _pify = require('pify');\n\nvar _pify2 = _interopRequireDefault(_pify);\n\nvar _plur = require('plur');\n\nvar _plur2 = _interopRequireDefault(_plur);\n\nvar _unusedFilename = require('unused-filename');\n\nvar _unusedFilename2 = _interopRequireDefault(_unusedFilename);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getResMem = (0, _mem2.default)(_getRes2.default);\nconst viewportListMem = (0, _mem2.default)(_viewportList2.default);\n\nlet listener;\n\nclass Pageres extends _events2.default {\n\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tthis.options = (0, _assign2.default)({}, options);\n\t\tthis.options.filename = this.options.filename || '<%= url %>-<%= size %><%= crop %>';\n\t\tthis.options.format = this.options.format || 'png';\n\t\tthis.options.incrementalName = this.options.incrementalName || false;\n\n\t\tthis.stats = {};\n\t\tthis.items = [];\n\t\tthis.sizes = [];\n\t\tthis.urls = [];\n\t\tthis._src = [];\n\t}\n\n\tsrc(url, sizes, options) {\n\t\tif (url === undefined) {\n\t\t\treturn this._src;\n\t\t}\n\n\t\tthis._src.push({ url: url, sizes: sizes, options: options });\n\t\treturn this;\n\t}\n\n\tdest(dir) {\n\t\tif (dir === undefined) {\n\t\t\treturn this._dest;\n\t\t}\n\n\t\tthis._dest = dir;\n\t\treturn this;\n\t}\n\n\trun() {\n\t\tvar _this = this;\n\n\t\treturn (0, _asyncToGenerator3.default)(function* () {\n\t\t\tyield _promise2.default.all(_this.src().map(function (src) {\n\t\t\t\t// eslint-disable-line array-callback-return\n\t\t\t\tconst options = (0, _assign2.default)({}, _this.options, src.options);\n\t\t\t\tconst sizes = (0, _arrayUniq2.default)(src.sizes.filter(/./.test, /^\\d{2,4}x\\d{2,4}$/i));\n\t\t\t\tconst keywords = (0, _arrayDiffer2.default)(src.sizes, sizes);\n\n\t\t\t\tif (!src.url) {\n\t\t\t\t\tthrow new Error('URL required');\n\t\t\t\t}\n\n\t\t\t\t_this.urls.push(src.url);\n\n\t\t\t\tif (sizes.length === 0 && keywords.indexOf('w3counter') !== -1) {\n\t\t\t\t\treturn _this.resolution(src.url, options);\n\t\t\t\t}\n\n\t\t\t\tif (keywords.length > 0) {\n\t\t\t\t\treturn _this.viewport({ url: src.url, sizes: sizes, keywords: keywords }, options);\n\t\t\t\t}\n\n\t\t\t\tfor (const size of sizes) {\n\t\t\t\t\t_this.sizes.push(size);\n\t\t\t\t\t_this.items.push(_this.create(src.url, size, options));\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\t_this.stats.urls = (0, _arrayUniq2.default)(_this.urls).length;\n\t\t\t_this.stats.sizes = (0, _arrayUniq2.default)(_this.sizes).length;\n\t\t\t_this.stats.screenshots = _this.items.length;\n\n\t\t\tif (!_this.dest()) {\n\t\t\t\treturn _this.items;\n\t\t\t}\n\n\t\t\tyield _this.save(_this.items);\n\n\t\t\treturn _this.items;\n\t\t})();\n\t}\n\n\tresolution(url, options) {\n\t\tvar _this2 = this;\n\n\t\treturn (0, _asyncToGenerator3.default)(function* () {\n\t\t\tfor (const item of yield getResMem()) {\n\t\t\t\t_this2.sizes.push(item.item);\n\t\t\t\t_this2.items.push(_this2.create(url, item.item, options));\n\t\t\t}\n\t\t})();\n\t}\n\n\tviewport(obj, options) {\n\t\tvar _this3 = this;\n\n\t\treturn (0, _asyncToGenerator3.default)(function* () {\n\t\t\tfor (const item of yield viewportListMem(obj.keywords)) {\n\t\t\t\t_this3.sizes.push(item.size);\n\t\t\t\tobj.sizes.push(item.size);\n\t\t\t}\n\n\t\t\tfor (const size of (0, _arrayUniq2.default)(obj.sizes)) {\n\t\t\t\t_this3.items.push(_this3.create(obj.url, size, options));\n\t\t\t}\n\t\t})();\n\t}\n\n\tsave(streams) {\n\t\tvar _this4 = this;\n\n\t\tconst files = [];\n\n\t\tconst end = () => _promise2.default.all(files.map(file => (0, _pify2.default)(_rimraf2.default)(file)));\n\n\t\tif (!listener) {\n\t\t\tlistener = process.on('SIGINT', (0, _asyncToGenerator3.default)(function* () {\n\t\t\t\tyield end();\n\t\t\t\tprocess.exit(1);\n\t\t\t}));\n\t\t}\n\n\t\treturn _promise2.default.all(streams.map(stream => new _promise2.default((() => {\n\t\t\tvar _ref2 = (0, _asyncToGenerator3.default)(function* (resolve, reject) {\n\t\t\t\tyield (0, _pify2.default)(_mkdirp2.default)(_this4.dest());\n\n\t\t\t\tconst dest = _path2.default.join(_this4.dest(), stream.filename);\n\t\t\t\tconst write = (0, _fsWriteStreamAtomic2.default)(dest);\n\n\t\t\t\tfiles.push(write.__atomicTmp);\n\n\t\t\t\tstream.on('warning', _this4.emit.bind(_this4, 'warning'));\n\t\t\t\tstream.on('warn', _this4.emit.bind(_this4, 'warn'));\n\t\t\t\tstream.on('error', (() => {\n\t\t\t\t\tvar _ref3 = (0, _asyncToGenerator3.default)(function* (err) {\n\t\t\t\t\t\tyield end();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn function (_x3) {\n\t\t\t\t\t\treturn _ref3.apply(this, arguments);\n\t\t\t\t\t};\n\t\t\t\t})());\n\n\t\t\t\twrite.on('finish', resolve);\n\t\t\t\twrite.on('error', (() => {\n\t\t\t\t\tvar _ref4 = (0, _asyncToGenerator3.default)(function* (err) {\n\t\t\t\t\t\tyield end();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn function (_x4) {\n\t\t\t\t\t\treturn _ref4.apply(this, arguments);\n\t\t\t\t\t};\n\t\t\t\t})());\n\n\t\t\t\tstream.pipe(write);\n\t\t\t});\n\n\t\t\treturn function (_x, _x2) {\n\t\t\t\treturn _ref2.apply(this, arguments);\n\t\t\t};\n\t\t})())));\n\t}\n\n\tcreate(uri, size, options) {\n\t\tconst sizes = size.split('x');\n\t\tconst stream = (0, _screenshotStream2.default)((0, _protocolify2.default)(uri), size, options);\n\n\t\t// Coercing to string here to please Flow\n\t\t// TODO: Should fix the Flow type so this isn't necessary\n\t\tconst filename = (0, _lodash2.default)(`${String(options.filename)}.${String(options.format)}`);\n\n\t\tlet hash = _url2.default.parse(uri).hash || '';\n\n\t\tif (_path2.default.isAbsolute(uri)) {\n\t\t\turi = _path2.default.basename(uri);\n\t\t}\n\n\t\t// Strip empty hash fragments: `#` `#/` `#!/`\n\t\tif (/^#!?\\/?$/.test(hash)) {\n\t\t\thash = '';\n\t\t}\n\n\t\tstream.filename = filename({\n\t\t\tcrop: options.crop ? '-cropped' : '',\n\t\t\tdate: (0, _easydate2.default)('Y-M-d'),\n\t\t\ttime: (0, _easydate2.default)('h-m-s'),\n\t\t\tsize: size,\n\t\t\twidth: sizes[0],\n\t\t\theight: sizes[1],\n\t\t\turl: (0, _filenamifyUrl2.default)(uri) + (0, _filenamify2.default)(hash)\n\t\t});\n\n\t\tif (options.incrementalName) {\n\t\t\tstream.filename = _unusedFilename2.default.sync(stream.filename);\n\t\t}\n\n\t\treturn stream;\n\t}\n\n\tsuccessMessage() {\n\t\tconst stats = this.stats;\n\t\tconst screenshots = stats.screenshots,\n\t\t      sizes = stats.sizes,\n\t\t      urls = stats.urls;\n\n\t\tconst words = {\n\t\t\tscreenshots: (0, _plur2.default)('screenshot', screenshots),\n\t\t\tsizes: (0, _plur2.default)('size', sizes),\n\t\t\turls: (0, _plur2.default)('url', urls)\n\t\t};\n\n\t\tconsole.log(`\\n${_logSymbols2.default.success} Generated ${screenshots} ${words.screenshots} from ${urls} ${words.urls} and ${sizes} ${words.sizes}`);\n\t}\n}\nexports.default = Pageres;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}